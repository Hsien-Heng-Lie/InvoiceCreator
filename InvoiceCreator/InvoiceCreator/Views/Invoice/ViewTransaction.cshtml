
@model X.PagedList.IPagedList<InvoiceCreator.Models.TransactionsModel>;
@using X.PagedList.Mvc.Core;
@using Microsoft.AspNetCore.Mvc;
@using X.PagedList;
@using X.PagedList.Web;


@{
    ViewData["Title"] = "View Transactions";
}
<div class="view-trans-wrapper">
  
    @using (Html.BeginForm("ViewTransaction", "Invoice", FormMethod.Post, new { @class= "search-wrapper", placeholder="yes"}))
    {
        @Html.TextBox("SearchString",ViewBag.currentFilter as string,null,new {@class="search-bar"})
        <input type="submit" value="search" class="button-general-style" />
    }
    <div class="table-wrapper">
        <div class="table-header">
            <div class="table-heading">Invoice number</div>
            <div class="table-heading">Student name</div>
            <div class="table-heading">Grad year</div>
            <div class="table-heading">Invoice date</div>
            <div class="table-heading">Download invoice</div>
        </div>

        <!--This will need to be mapped across multiple based on pagination-->
        @foreach(var transaction in Model )
        {
            <div class="transaction-card">
                <div class="trans-card-field" name="transId">@transaction.Id</div>
                <div class="trans-card-field">@transaction.Student.FirstName @transaction.Student.LastName</div>
                <div class="trans-card-field">@transaction.Student.gradYear</div>
                <div class="trans-card-field">@transaction.Question.LevelUp.End</div>
                <div class="trans-card-field-icon">
                    @using (Html.BeginForm("DownloadPDF", "Invoice", FormMethod.Post))
                    {
                        @Html.Hidden("transId",transaction.Id);
                        <button type="submit">
                            <img class="download-img" src="~/download-svgrepo-com.svg" alt="cool" />
                        </button>
                    }
                </div>
            </div>
        }
    </div>

    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("ViewTransaction",
    new { page, currentFilter = ViewBag.CurrentFilter }), new X.PagedList.Web.Common.PagedListRenderOptions(){
        UlElementClasses = new[] {"pagination"},

        LinkToNextPageFormat = "Next &gt;",
        LinkToPreviousPageFormat = "< Previous",
        MaximumPageNumbersToDisplay = 5,
    
    })
</div>